name: website

# build the documentation whenever there are new commits on main
on:
  push:
    branches:
      - main
    # Alternative: only build for tags.
    # tags:
    #   - '*'

# security: restrict permissions for CI jobs.
permissions:
  contents: read

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11' 

      # ADJUST THIS: install all dependencies (including pdoc)
      - run: pip install pdoc
      - run: pip uninstall certifi
      - run: pip install certifi
      - run: pip install -r requirements.txt 


      # ADJUST THIS: build your documentation into docs/.
      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
      - run: PYTHONPATH=./src pdoc --math src -o docs


      - uses: actions/upload-pages-artifact@v1
        with:
          path: docs/

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
